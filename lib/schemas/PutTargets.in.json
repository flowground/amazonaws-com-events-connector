{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "properties": {
                "Rule": {
                    "description": "The name of the rule.",
                    "maxLength": 64,
                    "minLength": 1,
                    "pattern": "[\\.\\-_A-Za-z0-9]+",
                    "type": "string"
                },
                "Targets": {
                    "description": "The targets to update or add to the rule.",
                    "items": {
                        "description": "<p>Targets are the resources to be invoked when a rule is triggered. For a complete list of services and resources that can be set as a target, see <a>PutTargets</a>.</p> <p>If you are setting the event bus of another account as the target, and that account granted permission to your account through an organization instead of directly by the account ID, then you must specify a <code>RoleArn</code> with proper permissions in the <code>Target</code> structure. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEvents-CrossAccountEventDelivery.html\">Sending and Receiving Events Between AWS Accounts</a> in the <i>Amazon CloudWatch Events User Guide</i>.</p>",
                        "properties": {
                            "Arn": {
                                "description": "The Amazon Resource Name (ARN) of the target.",
                                "maxLength": 1600,
                                "minLength": 1,
                                "type": "string"
                            },
                            "BatchParameters": {
                                "description": "If the event target is an AWS Batch job, this contains the job definition, job name, and other parameters. For more information, see <a href=\"http://docs.aws.amazon.com/batch/latest/userguide/jobs.html\">Jobs</a> in the <i>AWS Batch User Guide</i>.",
                                "properties": {
                                    "ArrayProperties": {
                                        "description": "The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an AWS Batch job.",
                                        "properties": {
                                            "Size": {
                                                "description": "The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "JobDefinition": {
                                        "description": "The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist.",
                                        "type": "string"
                                    },
                                    "JobName": {
                                        "description": "The name to use for this execution of the job, if the target is an AWS Batch job.",
                                        "type": "string"
                                    },
                                    "RetryStrategy": {
                                        "description": "The retry strategy to use for failed jobs, if the target is an AWS Batch job. The retry strategy is the number of times to retry the failed job execution. Valid values are 1–10. When you specify a retry strategy here, it overrides the retry strategy defined in the job definition.",
                                        "properties": {
                                            "Attempts": {
                                                "description": "The number of times to attempt to retry, if the job fails. Valid values are 1–10.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "JobDefinition",
                                    "JobName"
                                ],
                                "type": "object"
                            },
                            "EcsParameters": {
                                "description": "Contains the Amazon ECS task definition and task count to be used, if the event target is an Amazon ECS task. For more information about Amazon ECS tasks, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\">Task Definitions </a> in the <i>Amazon EC2 Container Service Developer Guide</i>.",
                                "properties": {
                                    "Group": {
                                        "description": "Specifies an ECS task group for the task. The maximum length is 255 characters.",
                                        "type": "string"
                                    },
                                    "LaunchType": {
                                        "description": "Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The <code>FARGATE</code> value is supported only in the Regions where AWS Fargate with Amazon ECS is supported. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS-Fargate.html\">AWS Fargate on Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.",
                                        "enum": [
                                            "EC2",
                                            "FARGATE"
                                        ],
                                        "type": "string"
                                    },
                                    "NetworkConfiguration": {
                                        "description": "<p>Use this structure if the ECS task uses the <code>awsvpc</code> network mode. This structure specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. This structure is required if <code>LaunchType</code> is <code>FARGATE</code> because the <code>awsvpc</code> mode is required for Fargate tasks.</p> <p>If you specify <code>NetworkConfiguration</code> when the target ECS task does not use the <code>awsvpc</code> network mode, the task fails.</p>",
                                        "properties": {
                                            "awsvpcConfiguration": {
                                                "description": "Use this structure to specify the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the <code>awsvpc</code> network mode.",
                                                "properties": {
                                                    "AssignPublicIp": {
                                                        "description": "Specifies whether the task's elastic network interface receives a public IP address. You can specify <code>ENABLED</code> only when <code>LaunchType</code> in <code>EcsParameters</code> is set to <code>FARGATE</code>.",
                                                        "enum": [
                                                            "ENABLED",
                                                            "DISABLED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "SecurityGroups": {
                                                        "description": "Specifies the security groups associated with the task. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Subnets": {
                                                        "description": "Specifies the subnets associated with the task. These subnets must all be in the same VPC. You can specify as many as 16 subnets.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Subnets"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "PlatformVersion": {
                                        "description": "<p>Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as <code>1.1.0</code>.</p> <p>This structure is used only if <code>LaunchType</code> is <code>FARGATE</code>. For more information about valid platform versions, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\">AWS Fargate Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>",
                                        "type": "string"
                                    },
                                    "TaskCount": {
                                        "description": "The number of tasks to create based on <code>TaskDefinition</code>. The default is 1.",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "TaskDefinitionArn": {
                                        "description": "The ARN of the task definition to use if the event target is an Amazon ECS task. ",
                                        "maxLength": 1600,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "TaskDefinitionArn"
                                ],
                                "type": "object"
                            },
                            "Id": {
                                "description": "The ID of the target.",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "[\\.\\-_A-Za-z0-9]+",
                                "type": "string"
                            },
                            "Input": {
                                "description": "Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. For more information, see <a href=\"http://www.rfc-editor.org/rfc/rfc7159.txt\">The JavaScript Object Notation (JSON) Data Interchange Format</a>.",
                                "maxLength": 8192,
                                "type": "string"
                            },
                            "InputPath": {
                                "description": "The value of the JSONPath that is used for extracting part of the matched event when passing it to the target. You must use JSON dot notation, not bracket notation. For more information about JSON paths, see <a href=\"http://goessner.net/articles/JsonPath/\">JSONPath</a>.",
                                "maxLength": 256,
                                "type": "string"
                            },
                            "InputTransformer": {
                                "description": "Settings to enable you to provide custom input to a target based on certain event data. You can extract one or more key-value pairs from the event and then use that data to send customized input to the target.",
                                "properties": {
                                    "InputPathsMap": {
                                        "description": "<p>Map of JSON paths to be extracted from the event. You can then insert these in the template in <code>InputTemplate</code> to produce the output you want to be sent to the target.</p> <p> <code>InputPathsMap</code> is an array key-value pairs, where each value is a valid JSON path. You can have as many as 10 key-value pairs. You must use JSON dot notation, not bracket notation.</p> <p>The keys cannot start with \"AWS.\" </p>",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[A-Za-z0-9\\_\\-]+",
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "maxLength": 256,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 10,
                                        "type": "array"
                                    },
                                    "InputTemplate": {
                                        "description": "<p>Input template where you specify placeholders that will be filled with the values of the keys from <code>InputPathsMap</code> to customize the data sent to the target. Enclose each <code>InputPathsMaps</code> value in brackets: &lt;<i>value</i>&gt; The InputTemplate must be valid JSON.</p> <p>If <code>InputTemplate</code> is a JSON object (surrounded by curly braces), the following restrictions apply:</p> <ul> <li> <p>The placeholder cannot be used as an object key.</p> </li> <li> <p>Object values cannot include quote marks.</p> </li> </ul> <p>The following example shows the syntax for using <code>InputPathsMap</code> and <code>InputTemplate</code>.</p> <p> <code> \"InputTransformer\":</code> </p> <p> <code>{</code> </p> <p> <code>\"InputPathsMap\": {\"instance\": \"$.detail.instance\",\"status\": \"$.detail.status\"},</code> </p> <p> <code>\"InputTemplate\": \"&lt;instance&gt; is in state &lt;status&gt;\"</code> </p> <p> <code>}</code> </p> <p>To have the <code>InputTemplate</code> include quote marks within a JSON string, escape each quote marks with a slash, as in the following example:</p> <p> <code> \"InputTransformer\":</code> </p> <p> <code>{</code> </p> <p> <code>\"InputPathsMap\": {\"instance\": \"$.detail.instance\",\"status\": \"$.detail.status\"},</code> </p> <p> <code>\"InputTemplate\": \"&lt;instance&gt; is in state \\\"&lt;status&gt;\\\"\"</code> </p> <p> <code>}</code> </p>",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InputTemplate"
                                ],
                                "type": "object"
                            },
                            "KinesisParameters": {
                                "description": "The custom parameter you can use to control the shard assignment, when the target is a Kinesis data stream. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key.",
                                "properties": {
                                    "PartitionKeyPath": {
                                        "description": "The JSON path to be extracted from the event and used as the partition key. For more information, see <a href=\"http://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#partition-key\">Amazon Kinesis Streams Key Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.",
                                        "maxLength": 256,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "PartitionKeyPath"
                                ],
                                "type": "object"
                            },
                            "RoleArn": {
                                "description": "The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. If one rule triggers multiple targets, you can use a different IAM role for each target.",
                                "maxLength": 1600,
                                "minLength": 1,
                                "type": "string"
                            },
                            "RunCommandParameters": {
                                "description": "Parameters used when you are using the rule to invoke Amazon EC2 Run Command.",
                                "properties": {
                                    "RunCommandTargets": {
                                        "description": "Currently, we support including only one RunCommandTarget block, which specifies either an array of InstanceIds or a tag.",
                                        "items": {
                                            "description": "Information about the EC2 instances that are to be sent the command, specified as key-value pairs. Each <code>RunCommandTarget</code> block can include only one key, but this key may specify multiple values.",
                                            "properties": {
                                                "Key": {
                                                    "description": "Can be either <code>tag:</code> <i>tag-key</i> or <code>InstanceIds</code>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "If <code>Key</code> is <code>tag:</code> <i>tag-key</i>, <code>Values</code> is a list of tag values. If <code>Key</code> is <code>InstanceIds</code>, <code>Values</code> is a list of Amazon EC2 instance IDs.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "RunCommandTargets"
                                ],
                                "type": "object"
                            },
                            "SqsParameters": {
                                "description": "<p>Contains the message group ID to use when the target is a FIFO queue.</p> <p>If you specify an SQS FIFO queue as a target, the queue must have content-based deduplication enabled.</p>",
                                "properties": {
                                    "MessageGroupId": {
                                        "description": "The FIFO message group ID to use as the target.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "required": [
                            "Id",
                            "Arn"
                        ],
                        "type": "object"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                }
            },
            "required": [
                "Rule",
                "Targets"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}